Simulation sim {
  Box par {
    &beginDate = 2022/01/01
  }
  Calendar calendar{
    .latitude  = 55.4
    .longitude = 10.4
    .begin = par[beginDate] - 1
    .end   = 2022/01/10
    .timeStep = 15
    .timeUnit = "m"
  }
  vg::Outdoors outdoors{
    Records records{
      .fileName = "DNK_Odense.txt"
      .cycle = TRUE
    }
    SkyTemperature skyTemperatureEstimate{
    }
    SoilTemperature soilTemperature{
      .initial = 1.2
    }
  }
  Box construction{
    vg::Geometry geometry{
      .numSpans = 25
      .spanWidth = 4
      .length = 100
      .height = 3.5
      .roofPitch = 26
    }
    Box shelter {
      Uwind coverUtop {
      }
      Layer glass {
        .swReflectivityTop      = 0.1
        .swTransmissivityTop    = 0.8
        .swReflectivityBottom   = 0.1
        .swTransmissivityBottom = 0.8
        .lwReflectivityTop      = 0.15
        .lwTransmissivityTop    = 0.20
        .lwReflectivityBottom   = 0.15
        .lwTransmissivityBottom = 0.20
        .Utop                   = ../coverUtop[value]
        .Ubottom .              = 1.2
        .heatCapacity           = 8400
      }
      Screen energy {
        .state = controllers/screens/energy[value]
        Layer parameters {
          .swReflectivityTop      = 0.93
          .swTransmissivityTop    = 0.0
          .swReflectivityBottom   = 0.43
          .swTransmissivityBottom = 0.0
          .lwReflectivityTop      = 0.93
          .lwTransmissivityTop    = 0.0
          .lwReflectivityBottom   = 0.43
          .lwTransmissivityBottom = 0.0
          .Utop                   = 1.2
          .Ubottom .              = 1.2
          .heatCapacity           = 80.
        }
      }
      Screen shade {
        .state = controllers/screens/shade[value]
        Layer parameters {
          .swReflectivityTop      = 0.70
          .swTransmissivityTop    = 0.20
          .swReflectivityBottom   = 0.70
          .swTransmissivityBottom = 0.20
          .lwReflectivityTop      = 0.70
          .lwTransmissivityTop    = 0.20
          .lwReflectivityBottom   = 0.70
          .lwTransmissivityBottom = 0.20
          .Utop                   = 1.2
          .Ubottom .              = 1.2
          .heatCapacity           = 80.
        }
      }
      Screen blackout {
        .state = ./state[value]
        Layer parameters {
          .swReflectivityTop      = 0.0
          .swTransmissivityTop    = 0.0
          .swReflectivityBottom   = 0.0
          .swTransmissivityBottom = 0.0
          .lwReflectivityTop      = 0.0
          .lwTransmissivityTop    = 0.0
          .lwReflectivityBottom   = 0.0
          .lwTransmissivityBottom = 0.0
          .Utop                   = 1.2
          .Ubottom .              = 1.2
          .heatCapacity           = 200.
        }
        Maximum state {
          .values = controllers/screens/blackout[value] | controllers/screens/energy[value]
        }
      }
      Box roof1 {
        Cover cover {
          .material = "glass"
        }
        ScreenTypes screenTypes {
          .types = "energy+shade+blackout"
        }
      }
      Box roof2 {
        Cover cover {
          .material = "glass"
        }
        ScreenTypes screenTypes {
          .types = "energy+shade+blackout"
        }
      }
      Box side1 {
        Cover cover {
          .material = "glass"
        }
        ScreenTypes screenTypes {
          .types = "blackout"
        }
      }
      Box side2 {
        Cover cover {
          .material = "glass"
        }
        ScreenTypes screenTypes {
          .types = "blackout"
        }
      }
      Box end1 {
        Cover cover {
          .material = "glass"
        }
        ScreenTypes screenTypes {
          .types = "blackout"
        }
      }
      Box end2 {
        Cover cover {
          .material = "glass"
        }
        ScreenTypes screenTypes {
          .types = "blackout"
        }
      }
    }
  }
  Box setpoints {
    PrioritySignal rhMax{
      .reverseOrder = TRUE
      DateTimeSignal {
        .beginDate = 1/1
        .endDate = 31/12
        .signalInside = 90
      }
      DateTimeSignal {
        .beginDate = 1/5
        .endDate = 31/8
        .signalInside = 80
      }
    }
    PrioritySignal rhMaxBand{
      DateTimeSignal {
        .beginDate = 1/1
        .endDate = 31/12
        .signalInside = 5
      }
    }
    PrioritySignal heating {
      .reverseOrder = TRUE
      DateTimeSignal {
        .beginDate = 1/1
        .endDate = 31/12
        .signalInside = 22
      }
      DateTimeSignal {
        .beginDate = 1/4
        .endDate = 30/9
        .signalInside = 20
      }
    }
    Box screens {
      PrioritySignal energyThreshold {
        DateTimeSignal {
          .beginDate = 1/1
          .endDate = 31/12
          .signalInside = 5
        }
      }
      PrioritySignal energyThresholdband {
        DateTimeSignal {
          .beginDate = 1/1
          .endDate = 31/12
          .signalInside = 0
        }
      }
      PrioritySignal shadeThreshold {
        DateTimeSignal {
          .beginDate = 1/1
          .endDate = 31/12
          .signalInside = 500
        }
      }
      PrioritySignal shadeThresholdband {
        DateTimeSignal {
          .beginDate = 1/1
          .endDate = 31/12
          .signalInside = 50
        }
      }
      PrioritySignal blackout {
        DateTimeSignal {
          .beginDate = 1/1
          .endDate = 31/12
          .signalInside = 0
        }
      }
      // Box groups {
        // PrioritySignal {
          // DateTimeSignal {
            // .beginDate = 1/1
            // .endDate = 31/12
            // .signalInside = ./code[value]
            // ScreenCombinationEncode code {
              // .formula = "shade1+energy1"
            // }
          // }
        // }
        // PrioritySignal {
          // DateTimeSignal {
            // .beginDate = 1/1
            // .endDate = 31/12
            // .signalInside = 0
          // }
        // }
        // PrioritySignal {
          // DateTimeSignal {
            // .beginDate = 1/1
            // .endDate = 31/12
            // .signalInside = 0
          // }
        // }
      // }
    }
  }
  Controllers controllers {
    Box screens {
      ProportionalSignal energy {
        .input         = outdoors[radiation]
        .threshold     = setpoints/screens/energyThreshold[value]
        .thresholdBand = setpoints/screens/energyThresholdBand[value]
        .maxSignal = 1
        .increasingSignal = FALSE
      }
      ProportionalSignal shade {
        .input         = outdoors[radiation]
        .threshold     = setpoints/screens/shadeThreshold[value]
        .thresholdBand = setpoints/screens/shadeThresholdBand[value]
        .maxSignal = 1
        .increasingSignal = TRUE
      }
      Box blackout {
        &value = setpoints/screens/blackout[value]
      }
    }
  }
  Box actuators {
    Box screens {
      ActuatorScreen layer1 {
        .layer = 1
      }
      ActuatorScreen layer2 {
        .layer = 2
      }
      ActuatorScreen layer3 {
        .layer = 3
      }
    }
    Box pipes {
      ActuatorHeatPipe circuit1 {
        .volume = 14.14 
        .flowRate = 10.0
        .k = 0.0063
        .b = 1.25
        .propLw = 0.5
        .inflowTemperature = 80.0
        .indoorsTemperature = 20.0
      }
      ActuatorHeatPipe circuit2 {
        .volume = 14.14 
        .flowRate = 20.0
        .k = 0.0063
        .b = 1.25
        .propLw = 0.5
        .inflowTemperature = 80.0
        .indoorsTemperature = 20.0
      }
    }
  }
  BudgetSolver solver {
  }
  OutputR output {
    PageR {
      .xAxis = calendar[dateTime]
      PlotR {
        .ports = circuit2[output::*]
      }
    }
    OutputSelector {
      .beginDateTime = par[beginDate]
    }
  }
}
