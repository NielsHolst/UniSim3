Simulation greenhouse { //1574
  Calendar calendar { //30
    .latitude = 55.56 // #12
    .longitude = 12.21 // #13
    .timeZone = 1.0 // #14
    .begin = 2001/02/16T00:00:00 // #15
    .end = null // #16
    .timeStep = 30 // #17
    .timeUnit = "s" // #18
    Sun sun { //11
      .latitude = 55.56 // #0
      .dayOfYear = 47 // #1
      .time = 00:00:30 // #2
    }
  }
  vg::Sensor sensor { //53
    .indoorsTemperatureIn = 22.3559 // #31
    .indoorsRhIn = 62.2529 // #32
    .indoorsCo2In = 815.096 // #33
    .indoorsWindspeedIn = -999.0 // #34
    .outdoorsTemperatureIn = 5.79415 // #35
    .outdoorsRhIn = 0.0 // #36
    .outdoorsCo2In = 415.0 // #37
    .outdoorsGlobalRadiationIn = 0.298096 // #38
    .outdoorsWindSpeedIn = 6.09364 // #39
    .soilTemperatureIn = -999.0 // #40
    .sinb = 0.0 // #41
  }
  vg::Outdoors outdoors { //104
    .co2 = 415.0 // #92
    .temperature = 5.79415 // #93
    .rh = 62.2529 // #94
    .radiation = 0.298096 // #95
    .propPar = 0.45 // #96
    .propUv = 0.07 // #97
    .windSpeed = 6.09364 // #98
    .skyTemperature = -21.7495 // #99
    SkyTemperature skyTemperatureEstimate { //60
      .intercept = 0.732 // #54
      .slope = 0.00635 // #55
      .airTemperature = 5.79415 // #56
      .rh = 62.2529 // #57
    }
    Box records { //61
    }
    Accumulator soilTemperature { //91
      .initial = 0.0 // #85
      .change = 0.000289708 // #86
      .minValue = -1.79769e+308 // #87
      .maxValue = 1.79769e+308 // #88
      Hump initial { //69
        .x = 47 // #62
        .x0 = 70 // #63
        .x1 = 365 // #64
        .ymin = 0 // #65
        .ymax = 16 // #66
        .ditch = FALSE // #67
      }
      PidController controller { //84
        .sensedValue = 0.000289708 // #70
        .desiredValue = 5.79415 // #71
        .Kprop = 5e-05 // #72
        .Kint = 0.0 // #73
        .Kderiv = 0.0 // #74
        .lookAhead = 0.0 // #75
        .minimum = -1.79769e+308 // #76
        .maximum = 1.79769e+308 // #77
        .timeStep = 30.0 // #78
      }
    }
  }
  Box construction { //548
    vg::Geometry geometry { //123
      .orientation = 90.0 // #105
      .numSpans = 1 // #106
      .spanWidth = 20.0 // #107
      .length = 75.0 // #108
      .height = 4.0 // #109
      .roofPitch = 26.0 // #110
      .reflection = 0.1 // #111
    }
    vg::Shelter shelter { //542
      .screenAirExponent = 4.0 // #534
      .Uair = 2.27 // #535
      .screenUstateExponent = 32.0 // #536
      .screenUventilationSlope = 2.0 // #537
      .airTransmissivities = 1.0 1.0 0.0 0.0 1.0 1.0 c[6] // #538
      .areas = 818.899 818.899 300.0 300.0 80.0 80.0 c[6] // #539
      .screenPerfection = 0.98 // #540
      vg::ShelterFace roof1 { //210
        vg::ShelterFaceArea area { //132
          .roofArea = 1637.8 // #124
          .sideWallsArea = 600.0 // #125
          .endWallsArea = 160.0 // #126
          .gablesArea = 87.6742 // #127
          .groundArea = 1500.0 // #128
        }
        vg::Cover cover { //154
          .swReflectivityTop = 0.2 // #133
          .swReflectivityBottom = 0.2 // #134
          .swTransmissivityTop = 0.7 // #135
          .swTransmissivityBottom = 0.7 // #136
          .lwReflectivityTop = 0.7 // #137
          .lwReflectivityBottom = 0.7 // #138
          .lwTransmissivityTop = 0.2 // #139
          .lwTransmissivityBottom = 0.2 // #140
          .Utop = 6.5 // #141
          .Ubottom = 6.5 // #142
          .area = 818.899 // #143
          .heatCapacity = 8400.0 // #144
          .windSpeed = 6.09364 // #149
          .haze = 1.0 // #150
          .UwindMinimum = 2.8 // #151
          .UwindSlope = 1.2 // #152
          .UwindExponent = 0.8 // #153
        }
        vg::Screens screens { //202
          ScreenRoof layer1 { //196
            .swReflectivityTop = -5.55112e-17 // #155
            .swReflectivityBottom = 0.65 // #156
            .swTransmissivityTop = 0.33 // #157
            .swTransmissivityBottom = 0.33 // #158
            .lwReflectivityTop = -5.55112e-17 // #159
            .lwReflectivityBottom = -5.55112e-17 // #160
            .lwTransmissivityTop = 0.33 // #161
            .lwTransmissivityBottom = 0.33 // #162
            .Utop = 3.25 // #163
            .Ubottom = 3.25 // #164
            .heatCapacity = 2280.0 // #166
            .haze = 1.0 // #171
            .transmissivityAir = 0.0 // #172
            .state = 0.0 // #173
            .ventilation = 0.0 // #174
            .Uair = 2.27 // #175
            .UstateExponent = 32.0 // #176
            .UventilationSlope = 2.0 // #177
            .groundArea = 1500.0 // #195
          }
          vg::ScreensAirTransmissivity airTransmissivity { //201
            .screenAirExponent = 4.0 // #197
            .states = 0.0 // #198
            .transmissivities = 0.0 // #199
          }
        }
        Vent vent { //209
          .length = 75.0 // #203
          .width = 1 // #204
          .number = 1 // #205
          .transmissivity = 1.0 // #206
        }
      }
      vg::ShelterFace roof2 { //297
        vg::ShelterFaceArea area { //219
          .roofArea = 1637.8 // #211
          .sideWallsArea = 600.0 // #212
          .endWallsArea = 160.0 // #213
          .gablesArea = 87.6742 // #214
          .groundArea = 1500.0 // #215
        }
        vg::Cover cover { //241
          .swReflectivityTop = 0.2 // #220
          .swReflectivityBottom = 0.2 // #221
          .swTransmissivityTop = 0.7 // #222
          .swTransmissivityBottom = 0.7 // #223
          .lwReflectivityTop = 0.7 // #224
          .lwReflectivityBottom = 0.7 // #225
          .lwTransmissivityTop = 0.2 // #226
          .lwTransmissivityBottom = 0.2 // #227
          .Utop = 6.5 // #228
          .Ubottom = 6.5 // #229
          .area = 818.899 // #230
          .heatCapacity = 8400.0 // #231
          .windSpeed = 6.09364 // #236
          .haze = 1.0 // #237
          .UwindMinimum = 2.8 // #238
          .UwindSlope = 1.2 // #239
          .UwindExponent = 0.8 // #240
        }
        vg::Screens screens { //289
          ScreenRoof layer1 { //283
            .swReflectivityTop = -5.55112e-17 // #242
            .swReflectivityBottom = 0.65 // #243
            .swTransmissivityTop = 0.33 // #244
            .swTransmissivityBottom = 0.33 // #245
            .lwReflectivityTop = -5.55112e-17 // #246
            .lwReflectivityBottom = -5.55112e-17 // #247
            .lwTransmissivityTop = 0.33 // #248
            .lwTransmissivityBottom = 0.33 // #249
            .Utop = 3.25 // #250
            .Ubottom = 3.25 // #251
            .heatCapacity = 2280.0 // #253
            .haze = 1.0 // #258
            .transmissivityAir = 0.0 // #259
            .state = 0.0 // #260
            .ventilation = 0.0 // #261
            .Uair = 2.27 // #262
            .UstateExponent = 32.0 // #263
            .UventilationSlope = 2.0 // #264
            .groundArea = 1500.0 // #282
          }
          vg::ScreensAirTransmissivity airTransmissivity { //288
            .screenAirExponent = 4.0 // #284
            .states = 0.0 // #285
            .transmissivities = 0.0 // #286
          }
        }
        Vent vent { //296
          .length = 75.0 // #290
          .width = 1 // #291
          .number = 1 // #292
          .transmissivity = 1.0 // #293
        }
      }
      vg::ShelterFace side1 { //377
        vg::ShelterFaceArea area { //306
          .roofArea = 1637.8 // #298
          .sideWallsArea = 600.0 // #299
          .endWallsArea = 160.0 // #300
          .gablesArea = 87.6742 // #301
          .groundArea = 1500.0 // #302
        }
        vg::Cover cover { //328
          .swReflectivityTop = 0.2 // #307
          .swReflectivityBottom = 0.2 // #308
          .swTransmissivityTop = 0.7 // #309
          .swTransmissivityBottom = 0.7 // #310
          .lwReflectivityTop = 0.7 // #311
          .lwReflectivityBottom = 0.7 // #312
          .lwTransmissivityTop = 0.2 // #313
          .lwTransmissivityBottom = 0.2 // #314
          .Utop = 6.5 // #315
          .Ubottom = 6.5 // #316
          .area = 300.0 // #317
          .heatCapacity = 8400.0 // #318
          .windSpeed = 6.09364 // #323
          .haze = 1.0 // #324
          .UwindMinimum = 2.8 // #325
          .UwindSlope = 1.2 // #326
          .UwindExponent = 0.8 // #327
        }
        vg::Screens screens { //376
          ScreenWall layer1 { //370
            .swReflectivityTop = -5.55112e-17 // #329
            .swReflectivityBottom = 0.65 // #330
            .swTransmissivityTop = 0.33 // #331
            .swTransmissivityBottom = 0.33 // #332
            .lwReflectivityTop = -5.55112e-17 // #333
            .lwReflectivityBottom = -5.55112e-17 // #334
            .lwTransmissivityTop = 0.33 // #335
            .lwTransmissivityBottom = 0.33 // #336
            .Utop = 3.25 // #337
            .Ubottom = 3.25 // #338
            .heatCapacity = 2280.0 // #340
            .haze = 1.0 // #345
            .transmissivityAir = 0.0 // #346
            .state = 1.0 // #347
            .ventilation = 0.0 // #348
            .Uair = 2.27 // #349
            .UstateExponent = 32.0 // #350
            .UventilationSlope = 2.0 // #351
            .faceArea = 300.0 // #369
          }
          vg::ScreensAirTransmissivity airTransmissivity { //375
            .screenAirExponent = 4.0 // #371
            .states = 1.0 // #372
            .transmissivities = 0.0 // #373
          }
        }
      }
      vg::ShelterFace side2 { //457
        vg::ShelterFaceArea area { //386
          .roofArea = 1637.8 // #378
          .sideWallsArea = 600.0 // #379
          .endWallsArea = 160.0 // #380
          .gablesArea = 87.6742 // #381
          .groundArea = 1500.0 // #382
        }
        vg::Cover cover { //408
          .swReflectivityTop = 0.2 // #387
          .swReflectivityBottom = 0.2 // #388
          .swTransmissivityTop = 0.7 // #389
          .swTransmissivityBottom = 0.7 // #390
          .lwReflectivityTop = 0.7 // #391
          .lwReflectivityBottom = 0.7 // #392
          .lwTransmissivityTop = 0.2 // #393
          .lwTransmissivityBottom = 0.2 // #394
          .Utop = 6.5 // #395
          .Ubottom = 6.5 // #396
          .area = 300.0 // #397
          .heatCapacity = 8400.0 // #398
          .windSpeed = 6.09364 // #403
          .haze = 1.0 // #404
          .UwindMinimum = 2.8 // #405
          .UwindSlope = 1.2 // #406
          .UwindExponent = 0.8 // #407
        }
        vg::Screens screens { //456
          ScreenWall layer1 { //450
            .swReflectivityTop = -5.55112e-17 // #409
            .swReflectivityBottom = 0.65 // #410
            .swTransmissivityTop = 0.33 // #411
            .swTransmissivityBottom = 0.33 // #412
            .lwReflectivityTop = -5.55112e-17 // #413
            .lwReflectivityBottom = -5.55112e-17 // #414
            .lwTransmissivityTop = 0.33 // #415
            .lwTransmissivityBottom = 0.33 // #416
            .Utop = 3.25 // #417
            .Ubottom = 3.25 // #418
            .heatCapacity = 2280.0 // #420
            .haze = 1.0 // #425
            .transmissivityAir = 0.0 // #426
            .state = 1.0 // #427
            .ventilation = 0.0 // #428
            .Uair = 2.27 // #429
            .UstateExponent = 32.0 // #430
            .UventilationSlope = 2.0 // #431
            .faceArea = 300.0 // #449
          }
          vg::ScreensAirTransmissivity airTransmissivity { //455
            .screenAirExponent = 4.0 // #451
            .states = 1.0 // #452
            .transmissivities = 0.0 // #453
          }
        }
      }
      vg::ShelterFace end1 { //495
        vg::ShelterFaceArea area { //466
          .roofArea = 1637.8 // #458
          .sideWallsArea = 600.0 // #459
          .endWallsArea = 160.0 // #460
          .gablesArea = 87.6742 // #461
          .groundArea = 1500.0 // #462
        }
        vg::Cover cover { //488
          .swReflectivityTop = 0.2 // #467
          .swReflectivityBottom = 0.2 // #468
          .swTransmissivityTop = 0.7 // #469
          .swTransmissivityBottom = 0.7 // #470
          .lwReflectivityTop = 0.7 // #471
          .lwReflectivityBottom = 0.7 // #472
          .lwTransmissivityTop = 0.2 // #473
          .lwTransmissivityBottom = 0.2 // #474
          .Utop = 6.5 // #475
          .Ubottom = 6.5 // #476
          .area = 80.0 // #477
          .heatCapacity = 8400.0 // #478
          .windSpeed = 6.09364 // #483
          .haze = 1.0 // #484
          .UwindMinimum = 2.8 // #485
          .UwindSlope = 1.2 // #486
          .UwindExponent = 0.8 // #487
        }
        vg::Screens screens { //494
          vg::ScreensAirTransmissivity airTransmissivity { //493
            .screenAirExponent = 4.0 // #489
            .states = null // #490
            .transmissivities = null // #491
          }
        }
      }
      vg::ShelterFace end2 { //533
        vg::ShelterFaceArea area { //504
          .roofArea = 1637.8 // #496
          .sideWallsArea = 600.0 // #497
          .endWallsArea = 160.0 // #498
          .gablesArea = 87.6742 // #499
          .groundArea = 1500.0 // #500
        }
        vg::Cover cover { //526
          .swReflectivityTop = 0.2 // #505
          .swReflectivityBottom = 0.2 // #506
          .swTransmissivityTop = 0.7 // #507
          .swTransmissivityBottom = 0.7 // #508
          .lwReflectivityTop = 0.7 // #509
          .lwReflectivityBottom = 0.7 // #510
          .lwTransmissivityTop = 0.2 // #511
          .lwTransmissivityBottom = 0.2 // #512
          .Utop = 6.5 // #513
          .Ubottom = 6.5 // #514
          .area = 80.0 // #515
          .heatCapacity = 8400.0 // #516
          .windSpeed = 6.09364 // #521
          .haze = 1.0 // #522
          .UwindMinimum = 2.8 // #523
          .UwindSlope = 1.2 // #524
          .UwindExponent = 0.8 // #525
        }
        vg::Screens screens { //532
          vg::ScreensAirTransmissivity airTransmissivity { //531
            .screenAirExponent = 4.0 // #527
            .states = null // #528
            .transmissivities = null // #529
          }
        }
      }
    }
    Box floor { //547
      &reflectivity = 0.6 // #543
      &Utop = 7.5 // #544
      &Ubottom = 0.1 // #545
      &heatCapacity = 42000.0 // #546
    }
  }
  Actuators actuators { //839
    ActuatorVentilation ventilation { //560
      .minFlux = 0.0 // #549
      .windCoef = 50.0 // #550
      .temperatureCoef = 14.0 // #551
      .windSpeed = 6.09364 // #552
      .outdoorsTemperature = 5.79415 // #553
      .indoorsTemperature = 22.3559 // #554
      .effectiveVentArea = sum[1] shelter/children::*/children::vent[effectiveArea] , end // #555
      .groundArea = 1500.0 // #556
    }
    Box co2Injection { //562
      &value = 0.0 // #561
    }
    Box screens { //629
      Accumulator layer1 { //584
        .change = ./children::pid[controlVariable] // #579
        .minValue = 0.0 // #580
        .maxValue = setpoints[maxScreen] // #581
        PidController pid { //577
          .sensedValue = 0.0 // #563
          .desiredValue = null // #564
          .Kprop = 0.05 // #565
          .Kint = 0.0 // #566
          .Kderiv = 0.0 // #567
          .lookAhead = 0.0 // #568
          .minimum = -1.79769e+308 // #569
          .maximum = 1.79769e+308 // #570
          .timeStep = calendar[timeStepSecs] // #571
        }
      }
      Accumulator layer2 { //606
        .change = ./children::pid[controlVariable] // #601
        .minValue = 0.0 // #602
        .maxValue = setpoints[maxScreen] // #603
        PidController pid { //599
          .sensedValue = ..[value] // #585
          .desiredValue = controllers/children::screens/children::layer2[value] // #586
          .Kprop = 0.05 // #587
          .Kint = 0.0 // #588
          .Kderiv = 0.0 // #589
          .lookAhead = 0.0 // #590
          .minimum = -1.79769e+308 // #591
          .maximum = 1.79769e+308 // #592
          .timeStep = calendar[timeStepSecs] // #593
        }
      }
      Accumulator layer3 { //628
        .change = ./children::pid[controlVariable] // #623
        .minValue = 0.0 // #624
        .maxValue = setpoints[maxScreen] // #625
        PidController pid { //621
          .sensedValue = ..[value] // #607
          .desiredValue = controllers/children::screens/children::layer3[value] // #608
          .Kprop = 0.05 // #609
          .Kint = 0.0 // #610
          .Kderiv = 0.0 // #611
          .lookAhead = 0.0 // #612
          .minimum = -1.79769e+308 // #613
          .maximum = 1.79769e+308 // #614
          .timeStep = calendar[timeStepSecs] // #615
        }
      }
    }
    ActuatorHeatPipes heating { //669
      .propConvection = 0.5 // #660
      .minTemperatures = ./children::pipes/children::*[minTemperature] // #661
      .maxTemperatures = ./children::pipes/children::*[maxTemperature] // #662
      .energyFluxes = ./children::pipes/children::*[energyFlux] // #663
      Box pipes { //658
        vg::PipeForced pipe { //643
          .Tair = sensor[indoorsTemperature] // #630
          .innerDiameter = 23.0 // #631
          .waterVolume = 1.24643 // #632
          .flowRate = 30.0 // #633
          .minTemperature = 0.0 // #634
          .maxTemperature = 100.0 // #635
          .Tinflow = 33.3902 // #636
          .k = 0.0008 // #637
          .b = 1.1563 // #638
          .knownToutflow = -999.0 // #639
        }
        vg::PipeForced pipe { //657
          .Tair = sensor[indoorsTemperature] // #644
          .innerDiameter = 23.0 // #645
          .waterVolume = 1.24643 // #646
          .flowRate = 30.0 // #647
          .minTemperature = 0.0 // #648
          .maxTemperature = 100.0 // #649
          .Tinflow = 0.0 // #650
          .k = 0.0008 // #651
          .b = 1.1563 // #652
          .knownToutflow = -999.0 // #653
        }
      }
    }
    vg::GrowthLights growthLights { //838
      .swTransmissivityTop = 1.0 // #786
      .swTransmissivityBottom = 1.0 // #787
      .lwTransmissivityTop = 1.0 // #790
      .lwTransmissivityBottom = 1.0 // #791
      .Utop = inf // #792
      .Ubottom = inf // #793
      .area = construction/children::geometry[groundArea] // #794
      .maxTemperatureRateOfChange = 100.0 // #807
      .timeStep = calendar[timeStepSecs] // #808
      .lightsCurrentlyOn = ./children::Box::*[currentlyOn] // #830
      .lightsParEmittedDown = ./children::Box::*[parEmittedDown] // #831
      .lightsSwEmittedDown = ./children::Box::*[swEmittedDown] // #832
      .lightsLwFluxDown = ./children::Box::*[lwFluxDown] // #833
      .lightsLwFluxUp = ./children::Box::*[lwFluxDown] // #834
      .lightsPowerUsage = ./children::Box::*[powerUsage] // #835
      GrowthLight noLight { //726
        .swTransmissivityTop = 1.0 // #672
        .swTransmissivityBottom = 1.0 // #673
        .lwTransmissivityTop = 1.0 // #676
        .lwTransmissivityBottom = 1.0 // #677
        .Utop = inf // #678
        .Ubottom = inf // #679
        .area = construction/children::geometry[groundArea] // #680
        .maxTemperatureRateOfChange = 100.0 // #693
        .timeStep = calendar[timeStepSecs] // #694
        .parPhotonCoef = 1.6 // #719
        .propLw = 0.1 // #720
        .ageCorrectedEfficiency = 1.0 // #721
      }
      vg::GrowthLight growthLight { //783
        .swTransmissivityTop = 1.0 // #729
        .swTransmissivityBottom = 1.0 // #730
        .lwTransmissivityTop = 1.0 // #733
        .lwTransmissivityBottom = 1.0 // #734
        .Utop = inf // #735
        .Ubottom = inf // #736
        .area = construction/children::geometry[groundArea] // #737
        .maxTemperatureRateOfChange = 100.0 // #750
        .timeStep = calendar[timeStepSecs] // #751
        .on = TRUE // #773
        .ballast = 2.17175 // #774
        .intensity = 62.0499 // #775
        .parPhotonCoef = 1.787 // #776
        .propLw = 0.5 // #777
        .ageCorrectedEfficiency = 1.0 // #778
      }
    }
  }
  vg::EnergyBudget energyBudget { //1217
    .greenhouseVolume = construction/children::geometry[volume] // #1199
    .roomTemperature = 22.3559 // #1200
    .pipeEnergyFluxConvection = actuators/children::heating[energyFluxConvection] // #1201
    .cropCoverage = crop[coverage] // #1202
    .withCrop = TRUE // #1203
    .keepConstantScreenTemperature = FALSE // #1204
    .outdoorsTemperature = outdoors[temperature] // #1205
    .soilTemperature = outdoors[soilTemperature] // #1206
    .timeStep = calendar[timeStepSecs] // #1207
    .precision = 0.001 // #1208
    .step = /.[step] // #1209
    vg::HeatTransferSky sky { //889
      .swTransmissivityTop = 0.0 // #842
      .swTransmissivityBottom = 0.0 // #843
      .lwTransmissivityTop = 0.0 // #846
      .lwTransmissivityBottom = 0.0 // #847
      .Utop = inf // #848
      .Ubottom = inf // #849
      .area = construction/children::geometry[coverArea] // #850
      .maxTemperatureRateOfChange = 100.0 // #863
      .timeStep = calendar[timeStepSecs] // #864
      .irradiation = outdoors[radiation] // #886
      .propPar = outdoors[propPar] // #887
      .propUv = outdoors[propUv] // #888
    }
    vg::HeatTransferCover cover { //958
      .swTransmissivityTop = 1.0 // #892
      .swTransmissivityBottom = 1.0 // #893
      .lwTransmissivityTop = 1.0 // #896
      .lwTransmissivityBottom = 1.0 // #897
      .Utop = inf // #898
      .Ubottom = inf // #899
      .condensationRate = waterBudget/children::condensationCover[vapourFlux] // #912
      .maxTemperatureRateOfChange = 100.0 // #913
      .timeStep = calendar[timeStepSecs] // #914
      .swReflectivityTopShelter = shelter/children::*/children::cover[swReflectivityTop] // #936
      .swReflectivityBottomShelter = shelter/children::*/children::cover[swReflectivityBottom] // #937
      .swTransmissivityTopShelter = shelter/children::*/children::cover[swTransmissivityTop] // #938
      .swTransmissivityBottomShelter = shelter/children::*/children::cover[swTransmissivityBottom] // #939
      .swAbsorptivityTopShelter = shelter/children::*/children::cover[swAbsorptivityTop] // #940
      .swAbsorptivityBottomShelter = shelter/children::*/children::cover[swAbsorptivityBottom] // #941
      .lwReflectivityTopShelter = shelter/children::*/children::cover[lwReflectivityTop] // #942
      .lwReflectivityBottomShelter = shelter/children::*/children::cover[lwReflectivityBottom] // #943
      .lwTransmissivityTopShelter = shelter/children::*/children::cover[lwTransmissivityTop] // #944
      .lwTransmissivityBottomShelter = shelter/children::*/children::cover[lwTransmissivityBottom] // #945
      .lwAbsorptivityTopShelter = shelter/children::*/children::cover[lwAbsorptivityTop] // #946
      .lwAbsorptivityBottomShelter = shelter/children::*/children::cover[lwAbsorptivityBottom] // #947
      .UtopShelter = shelter/children::*/children::cover[Utop] // #948
      .UbottomShelter = shelter/children::*/children::cover[Ubottom] // #949
      .areaShelter = shelter/children::*/children::cover[area] // #950
      .heatCapacityShelter = shelter/children::*/children::cover[heatCapacity] // #951
      .groundArea = geometry[groundArea] // #952
      .coverPerGroundArea = construction/children::geometry[coverPerGroundArea] // #953
      .indoorsTemperature = indoors/children::temperature[value] // #954
      .skyTemperature = outdoors[skyTemperature] // #956
      .outdoorsTemperature = outdoors[temperature] // #957
    }
    vg::HeatTransferScreen1 screen1 { //1026
      .swTransmissivityTop = 1.0 // #961
      .swTransmissivityBottom = 1.0 // #962
      .lwTransmissivityTop = 1.0 // #965
      .lwTransmissivityBottom = 1.0 // #966
      .Utop = inf // #967
      .Ubottom = inf // #968
      .condensationRate = waterBudget/children::condensationScreens/children::screen1[vapourFlux] // #981
      .maxTemperatureRateOfChange = 0.25 // #982
      .timeStep = calendar[timeStepSecs] // #983
      .swReflectivityTopShelter = shelter/children::*/children::screens/children::layer1[swReflectivityTopNet] // #1005
      .swReflectivityBottomShelter = shelter/children::*/children::screens/children::layer1[swReflectivityBottomNet] // #1006
      .swTransmissivityTopShelter = shelter/children::*/children::screens/children::layer1[swTransmissivityTopNet] // #1007
      .swTransmissivityBottomShelter = shelter/children::*/children::screens/children::layer1[swTransmissivityBottomNet] // #1008
      .swAbsorptivityTopShelter = shelter/children::*/children::screens/children::layer1[swAbsorptivityTopNet] // #1009
      .swAbsorptivityBottomShelter = shelter/children::*/children::screens/children::layer1[swAbsorptivityBottomNet] // #1010
      .lwReflectivityTopShelter = shelter/children::*/children::screens/children::layer1[lwReflectivityTopNet] // #1011
      .lwReflectivityBottomShelter = shelter/children::*/children::screens/children::layer1[lwReflectivityBottomNet] // #1012
      .lwTransmissivityTopShelter = shelter/children::*/children::screens/children::layer1[lwTransmissivityTopNet] // #1013
      .lwTransmissivityBottomShelter = shelter/children::*/children::screens/children::layer1[lwTransmissivityBottomNet] // #1014
      .lwAbsorptivityTopShelter = shelter/children::*/children::screens/children::layer1[lwAbsorptivityTopNet] // #1015
      .lwAbsorptivityBottomShelter = shelter/children::*/children::screens/children::layer1[lwAbsorptivityBottomNet] // #1016
      .UtopShelter = shelter/children::*/children::screens/children::layer1[UtopNet] // #1017
      .UbottomShelter = shelter/children::*/children::screens/children::layer1[UbottomNet] // #1018
      .areaShelter = shelter/children::*/children::screens/children::layer1[area] // #1019
      .heatCapacityShelter = shelter/children::*/children::screens/children::layer1[heatCapacity] // #1020
      .groundArea = geometry[groundArea] // #1021
      .coverPerGroundArea = construction/children::geometry[coverPerGroundArea] // #1022
      .indoorsTemperature = indoors/children::temperature[value] // #1023
      .coverArea = geometry[coverArea] // #1025
    }
    vg::HeatTransferPipe pipe { //1074
      .swTransmissivityTop = 1.0 // #1029
      .swTransmissivityBottom = 1.0 // #1030
      .lwTransmissivityTop = 1.0 // #1033
      .lwTransmissivityBottom = 1.0 // #1034
      .Utop = inf // #1035
      .Ubottom = inf // #1036
      .area = construction/children::geometry[groundArea] // #1037
      .maxTemperatureRateOfChange = 100.0 // #1050
      .timeStep = calendar[timeStepSecs] // #1051
      .energyFluxRadiation = actuators/children::heating[energyFluxRadiation] // #1073
    }
    vg::HeatTransferCrop crop { //1127
      .swTransmissivityTop = 1.0 // #1077
      .swTransmissivityBottom = 1.0 // #1078
      .lwTransmissivityTop = 1.0 // #1081
      .lwTransmissivityBottom = 1.0 // #1082
      .Utop = inf // #1083
      .Ubottom = inf // #1084
      .area = construction/children::geometry[groundArea] // #1085
      .maxTemperatureRateOfChange = 100.0 // #1098
      .timeStep = calendar[timeStepSecs] // #1099
      .lai = /crop[lai] // #1121
      .swK = crop[k] // #1122
      .swScatteringCoef = 0.2 // #1123
      .lwK = 0.8 // #1124
      .lwScatteringCoef = 0.05 // #1125
      .leafTemperature = crop/children::temperature[value] // #1126
    }
    vg::HeatTransferFloor floor { //1174
      .swReflectivityTop = construction/children::floor[reflectivity] // #1128
      .swReflectivityBottom = construction/children::floor[reflectivity] // #1129
      .swTransmissivityTop = 0.0 // #1130
      .swTransmissivityBottom = 0.0 // #1131
      .lwReflectivityTop = construction/children::floor[reflectivity] // #1132
      .lwReflectivityBottom = construction/children::floor[reflectivity] // #1133
      .lwTransmissivityTop = 0.0 // #1134
      .lwTransmissivityBottom = 0.0 // #1135
      .Utop = construction/children::floor[Utop] // #1136
      .Ubottom = construction/children::floor[Ubottom] // #1137
      .area = construction/children::geometry[groundArea] // #1138
      .heatCapacity = construction/children::floor[heatCapacity] // #1139
      .maxTemperatureRateOfChange = 100.0 // #1151
      .timeStep = calendar[timeStepSecs] // #1152
    }
    Box indoors { //1198
      vg::IndoorsVentilation ventilation { //1185
        .fluxLeakageAlone = ./children::leakage[flux] // #1179
        .fluxVentilationAlone = actuators/children::ventilation[flux] // #1180
        .screensAirTransmissivity = shelter[screensAirTransmissivity] // #1181
        vg::LeakageVentilation leakage { //1178
          .leakage = 0.1 // #1175
          .windSpeed = outdoors[windSpeed] // #1176
        }
      }
      vg::IndoorsTemperature temperature { //1197
        .initTemperature = 22.3559 // #1186
        .timeStep = calendar[timeStepSecs] // #1188
        .groundArea = geometry[groundArea] // #1189
        .volume = geometry[volume] // #1190
        .airInflux = indoors/children::ventilation[flux] // #1191
        .outdoorsTemperature = outdoors[temperature] // #1192
        .keepConstant = TRUE // #1193
        .scanTemperatures = TRUE // #1194
      }
    }
  }
  vg::WaterBudget waterBudget { //1271
    .conductance = ./children::*[conductance] // #1265
    .vapourFlux = ./children::*[vapourFlux] // #1266
    .gain = ./children::*[gain] // #1267
    vg::VapourFluxVentilation ventilation { //1226
      .timeStep = calendar[timeStepSecs] // #1221
      .airInflux = indoors/children::ventilation[flux] // #1222
      .averageHeight = geometry[averageHeight] // #1223
      .indoorsAh = indoors/children::humidity[ah] // #1224
      .outdoorsAh = outdoors[ah] // #1225
    }
    vg::VapourFluxTranspiration transpiration { //1230
    }
    vg::VapourFluxCondensationCover condensationCrop { //1239
      .coverPerGroundArea = geometry[coverPerGroundArea] // #1234
      .coverTemperature = energyBudget/children::cover[temperature] // #1235
      .indoorsTemperature = indoors/children::temperature[value] // #1236
      .indoorsAh = indoors/children::humidity[ah] // #1237
    }
    vg::VapourFluxCondensationCover condensationCover { //1248
      .coverPerGroundArea = geometry[coverPerGroundArea] // #1243
      .coverTemperature = energyBudget/children::cover[temperature] // #1244
      .indoorsTemperature = indoors/children::temperature[value] // #1245
      .indoorsAh = indoors/children::humidity[ah] // #1246
    }
    vg::VapourFluxCondensationScreens condensationScreens { //1264
      .conductances = ./children::*[conductance] // #1261
      .vapourFluxes = ./children::*[vapourFlux] // #1262
      .gains = ./children::*[gain] // #1263
      VapourFluxCondensationScreen1 screen1 { //1257
        .groundArea = geometry[groundArea] // #1252
        .screenAreas = shelter/children::*/children::screens/children::layer1[area] // #1253
        .screenTemperature = energyBudget/children::screen1[temperature] // #1254
        .indoorsTemperature = indoors/children::temperature[value] // #1255
        .indoorsAh = indoors/children::humidity[ah] // #1256
      }
    }
  }
  vg::Indoors indoors { //1305
    ThresholdSignal co2 { //1284
      .initialSignal = 2000.0 // #1272
      .initialFlag = FALSE // #1273
      .input = greenhouse[step] // #1279
      .threshold = 49.5 // #1280
      .flagAbove = TRUE // #1281
      .signalFlagged = 815.096 // #1282
      .signalUnflagged = 2000.0 // #1283
    }
    vg::IndoorsHumidity humidity { //1299
      .initRh = 62.2529 // #1285
      .conductance = waterBudget[conductanceSum] // #1286
      .vapourFlux = waterBudget[vapourFluxSum] // #1287
      .gain = waterBudget[gainSum] // #1288
      .temperature = indoors/children::temperature[value] // #1289
      .height = geometry[averageHeight] // #1290
      .timeStep = calendar[timeStepSecs] // #1291
      .keepConstant = TRUE // #1292
    }
    vg::IndoorsWindSpeed windSpeed { //1304
      .ventilation = indoors/children::ventilation[flux] // #1300
      .averageHeight = geometry[averageHeight] // #1301
      .minimumValue = 0.1 // #1302
    }
  }
  vg::Crop crop { //1551
    .lai = 1.0 // #1540
    .coverage = 0.95 // #1541
    .k = 0.7 // #1542
    .gammaStar = 55.47 // #1543
    .Jmax = 146.52 // #1544
    .lightRespiration = 0.74 // #1545
    .ballBerryIntercept = 0.1 // #1546
    .ballBerrySlope = 1.64 // #1547
    .Vcmax = 71.61 // #1548
    .alpha = 0.9125 // #1549
    .trackPn = TRUE // #1550
    vg::LeafWindSpeed leafWindSpeed { //1309
      .indoorsWindSpeedMinimum = 0.025 // #1306
      .indoorsWindSpeed = indoors/children::windSpeed[value] // #1307
    }
    vg::BoundaryLayerResistanceStanghellini boundaryLayerResistance { //1316
      .leafDimension = 0.025 // #1310
      .leafWindSpeed = ../children::leafWindSpeed[value] // #1311
      .leafTemperature = ../children::temperature[value] // #1314
      .indoorsTemperature = indoors/children::temperature[value] // #1315
    }
    vg::LeafTranspiration transpiration { //1328
      .lai = ..[lai] // #1320
      .cropCoverage = crop[coverage] // #1321
      .indoorsAh = indoors/children::humidity[ah] // #1322
      .radiationAbsorbed = energyBudget/children::crop[absorbed] // #1323
      .leafTemperature = ../children::temperature[value] // #1324
      .rsH2O = mean[1] ../children::photosynthesis/children::*/children::stomatalResistance[rH2O] , end // #1325
      .rbH2O = ../children::boundaryLayerResistance[rH2O] // #1326
    }
    vg::LeafTemperature temperature { //1336
      .indoorsTemperature = indoors/children::temperature[value] // #1329
      .indoorsRh = indoors/children::humidity[rh] // #1330
      .rsH2O = mean[1] ../children::photosynthesis/children::*/children::stomatalResistance[rH2O] , end // #1331
      .rbH2O = ../children::boundaryLayerResistance[rH2O] // #1332
      .radiationAbsorbed = energyBudget/children::crop[absorbed] // #1333
      .lai = /crop[lai] // #1334
    }
    vg::CanopyPhotosynthesis photosynthesis { //1484
      .lai = /crop[lai] // #1472
      .leafAn = ./children::*/children::leafPhotosynthesis[An] // #1473
      .leafAg = ./children::*/children::leafPhotosynthesis[Ag] // #1474
      .growthRespiration = 0.3 // #1475
      .trackPn = ..[trackPn] // #1476
      Box top { //1381
        IntercellularCo2 intercellularCo2 { //1343
          .boundaryLayerResistance = crop/children::boundaryLayerResistance[rCo2] // #1337
          .stomatalResistance = ../children::stomatalResistance[rCo2] // #1338
          .indoorsCo2 = indoors/children::co2[value] // #1339
          .leafPhotosynthesis = ../children::leafPhotosynthesis[An] // #1340
        }
        LeafParAbsorbed parAbsorbed { //1348
          .parFlux = energyBudget[cropParFluxFromAbove] // #1344
          .k = /crop[k] // #1345
          .lai = /crop[lai] // #1346
        }
        LeafRespiration respiration { //1355
          .leafTemperature = crop/children::temperature[value] // #1349
          .canopyParAbsorbed = energyBudget/children::crop[parAbsorbed] // #1350
          .RL = crop[lightRespiration] // #1351
          .darknessThreshold = 5.0 // #1352
          .Q10 = 1.92 // #1353
        }
        LeafPhotosynthesisAj Aj { //1366
          .gammaStar = crop[gammaStar] // #1356
          .Jmax = crop[Jmax] // #1357
          .k = crop[k] // #1358
          .leafTemperature = crop/children::temperature[value] // #1359
          .intercellularCo2 = ../children::intercellularCo2[value] // #1360
          .parAbsorbed = ../children::parAbsorbed[value] // #1361
          .respiration = ../children::respiration[value] // #1362
        }
        StomatalResistanceBallBerry stomatalResistance { //1374
          .g0 = crop[ballBerryIntercept] // #1369
          .g1 = crop[ballBerrySlope] // #1370
          .leafPhotosynthesis = ../children::leafPhotosynthesis[An] // #1371
          .rh = indoors/children::humidity[rh] // #1372
          .ca = indoors/children::co2[value] // #1373
        }
        LeafPhotosynthesis leafPhotosynthesis { //1380
          .leafAj = ../children::Aj[value] // #1375
          .leafAr = ../children::respiration[value] // #1376
        }
      }
      Box mid { //1426
        IntercellularCo2 intercellularCo2 { //1388
          .boundaryLayerResistance = crop/children::boundaryLayerResistance[rCo2] // #1382
          .stomatalResistance = ../children::stomatalResistance[rCo2] // #1383
          .indoorsCo2 = indoors/children::co2[value] // #1384
          .leafPhotosynthesis = ../children::leafPhotosynthesis[An] // #1385
        }
        LeafParAbsorbed parAbsorbed { //1393
          .parFlux = energyBudget[cropParFluxFromAbove] // #1389
          .k = /crop[k] // #1390
          .lai = /crop[lai] // #1391
        }
        LeafRespiration respiration { //1400
          .leafTemperature = crop/children::temperature[value] // #1394
          .canopyParAbsorbed = energyBudget/children::crop[parAbsorbed] // #1395
          .RL = crop[lightRespiration] // #1396
          .darknessThreshold = 5.0 // #1397
          .Q10 = 1.92 // #1398
        }
        LeafPhotosynthesisAj Aj { //1411
          .gammaStar = crop[gammaStar] // #1401
          .Jmax = crop[Jmax] // #1402
          .k = crop[k] // #1403
          .leafTemperature = crop/children::temperature[value] // #1404
          .intercellularCo2 = ../children::intercellularCo2[value] // #1405
          .parAbsorbed = ../children::parAbsorbed[value] // #1406
          .respiration = ../children::respiration[value] // #1407
        }
        StomatalResistanceBallBerry stomatalResistance { //1419
          .g0 = crop[ballBerryIntercept] // #1414
          .g1 = crop[ballBerrySlope] // #1415
          .leafPhotosynthesis = ../children::leafPhotosynthesis[An] // #1416
          .rh = indoors/children::humidity[rh] // #1417
          .ca = indoors/children::co2[value] // #1418
        }
        LeafPhotosynthesis leafPhotosynthesis { //1425
          .leafAj = ../children::Aj[value] // #1420
          .leafAr = ../children::respiration[value] // #1421
        }
      }
      Box bottom { //1471
        IntercellularCo2 intercellularCo2 { //1433
          .boundaryLayerResistance = crop/children::boundaryLayerResistance[rCo2] // #1427
          .stomatalResistance = ../children::stomatalResistance[rCo2] // #1428
          .indoorsCo2 = indoors/children::co2[value] // #1429
          .leafPhotosynthesis = ../children::leafPhotosynthesis[An] // #1430
        }
        LeafParAbsorbed parAbsorbed { //1438
          .parFlux = energyBudget[cropParFluxFromAbove] // #1434
          .k = /crop[k] // #1435
          .lai = /crop[lai] // #1436
        }
        LeafRespiration respiration { //1445
          .leafTemperature = crop/children::temperature[value] // #1439
          .canopyParAbsorbed = energyBudget/children::crop[parAbsorbed] // #1440
          .RL = crop[lightRespiration] // #1441
          .darknessThreshold = 5.0 // #1442
          .Q10 = 1.92 // #1443
        }
        LeafPhotosynthesisAj Aj { //1456
          .gammaStar = crop[gammaStar] // #1446
          .Jmax = crop[Jmax] // #1447
          .k = crop[k] // #1448
          .leafTemperature = crop/children::temperature[value] // #1449
          .intercellularCo2 = ../children::intercellularCo2[value] // #1450
          .parAbsorbed = ../children::parAbsorbed[value] // #1451
          .respiration = ../children::respiration[value] // #1452
        }
        StomatalResistanceBallBerry stomatalResistance { //1464
          .g0 = crop[ballBerryIntercept] // #1459
          .g1 = crop[ballBerrySlope] // #1460
          .leafPhotosynthesis = ../children::leafPhotosynthesis[An] // #1461
          .rh = indoors/children::humidity[rh] // #1462
          .ca = indoors/children::co2[value] // #1463
        }
        LeafPhotosynthesis leafPhotosynthesis { //1470
          .leafAj = ../children::Aj[value] // #1465
          .leafAr = ../children::respiration[value] // #1466
        }
      }
    }
    vg::BigLeafPhotosynthesis bigLeaf { //1539
      .leafAn = ./children::leaf/children::leafPhotosynthesis[An] // #1530
      .leafAg = ./children::leaf/children::leafPhotosynthesis[Ag] // #1531
      .growthRespiration = 0.3 // #1532
      Box leaf { //1529
        IntercellularCo2 intercellularCo2 { //1491
          .boundaryLayerResistance = crop/children::boundaryLayerResistance[rCo2] // #1485
          .stomatalResistance = ../children::stomatalResistance[rCo2] // #1486
          .indoorsCo2 = indoors/children::co2[value] // #1487
          .leafPhotosynthesis = ../children::leafPhotosynthesis[An] // #1488
        }
        LeafParAbsorbed parAbsorbed { //1496
          .parFlux = energyBudget[cropParFluxFromAbove] // #1492
          .k = /crop[k] // #1493
          .lai = /crop[lai] // #1494
        }
        LeafRespiration respiration { //1503
          .leafTemperature = crop/children::temperature[value] // #1497
          .canopyParAbsorbed = energyBudget/children::crop[parAbsorbed] // #1498
          .RL = crop[lightRespiration] // #1499
          .darknessThreshold = 5.0 // #1500
          .Q10 = 1.92 // #1501
        }
        LeafPhotosynthesisAj Aj { //1514
          .gammaStar = crop[gammaStar] // #1504
          .Jmax = crop[Jmax] // #1505
          .k = crop[k] // #1506
          .leafTemperature = crop/children::temperature[value] // #1507
          .intercellularCo2 = ../children::intercellularCo2[value] // #1508
          .parAbsorbed = ../children::parAbsorbed[value] // #1509
          .respiration = ../children::respiration[value] // #1510
        }
        StomatalResistanceBallBerry stomatalResistance { //1522
          .g0 = crop[ballBerryIntercept] // #1517
          .g1 = crop[ballBerrySlope] // #1518
          .leafPhotosynthesis = ../children::leafPhotosynthesis[An] // #1519
          .rh = indoors/children::humidity[rh] // #1520
          .ca = indoors/children::co2[value] // #1521
        }
        LeafPhotosynthesis leafPhotosynthesis { //1528
          .leafAj = ../children::Aj[value] // #1523
          .leafAr = ../children::respiration[value] // #1524
        }
      }
    }
  }
  vg::ParBudget parBudget { //1560
    .sunPar = sky[parFluxDown] // #1552
    .growthLightsPar = growthLights[parEmittedDown] // #1553
    .indoorsTotalPar = energyBudget[cropParFluxFromAbove] // #1554
    .Pn = crop/children::photosynthesis[Pn] // #1555
    .cropCoverage = crop[coverage] // #1556
  }
}
